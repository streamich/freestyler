{
  "name": "freestyler",
  "version": "3.0.3",
  "description": "5th generation React styling library",
  "main": "lib/index.js",
  "unpkg": "dist/freestyler.umd.min.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/streamich/freestyler.git"
  },
  "scripts": {
    "start": "npm run storybook",
    "clean": "rimraf modules lib dist && npm run docs:clean && npm run test:visual:clean",
    "build": "npm run clean && npm run build:lib && npm run build:cjs && npm run build:umd",
    "build:modules": "gulp build-modules --gulpfile build/gulpfile.js",
    "build:lib": "gulp build-ts --gulpfile build/gulpfile.js",
    "build:cjs": "webpack -p --config build/webpack.config.cjs.js",
    "build:umd": "webpack -p --config build/webpack.config.umd.js",
    "test": "npm run test:server && jest",
    "test:coverage": "jest --coverage",
    "test:watch": "jest --watch",
    "test:server": "NODE_ENV=production mocha -r ts-node/register src/**/*.test-server.ts*",
    "test:visual": "npm run storybook",
    "test:visual:build": "build-storybook",
    "test:visual:clean": "rimraf storybook-static",
    "docs:clean": "rimraf docs/_book",
    "docs:serve": "npm run docs:clean && gitbook install ./docs && gitbook serve ./docs",
    "docs:build": "npm run docs:clean && gitbook install ./docs && gitbook build ./docs",
    "docs:publish": "npm run test:visual:build && npm run docs:build && ./build/publish-docs.sh",
    "demo": "webpack-dev-server --config demo/webpack.config.js",
    "prettier": "prettier --write '**/*.ts'",
    "precommit": "lint-staged",
    "storybook": "start-storybook -p 6006",
    "semantic-release": "semantic-release"
  },
  "lint-staged": {
    "**/*.ts": [
      "prettier --write",
      "git add"
    ]
  },
  "peerDependencies": {
    "react": "*",
    "react-dom": "*"
  },
  "dependencies": {
    "fast-af": "^0.3.0",
    "tslib": "^1.9.0"
  },
  "devDependencies": {
    "@types/react": "19.0.7",
    "@types/enzyme": "3.10.18",
    "@types/enzyme-to-json": "1.5.7",
    "@types/jest": "29.5.14",
    "@types/node": "22.10.7",
    "@types/prop-types": "15.7.14",
    "enzyme": "3.11.0",
    "enzyme-to-json": "3.6.2",
    "enzyme-adapter-react-16": "1.15.8",
    "gulp": "5.0.0",
    "gulp-typescript": "5.0.1",
    "husky": "9.1.7",
    "jest": "29.7.0",
    "jest-tap-reporter": "1.9.0",
    "lerna": "8.1.9",
    "lint-staged": "15.3.0",
    "prettier": "3.4.2",
    "prop-types": "15.8.1",
    "react": "19.0.0",
    "react-dom": "19.0.0",
    "react-test-renderer": "19.0.0",
    "rimraf": "6.0.1",
    "source-map-support": "0.5.21",
    "ts-jest": "29.2.5",
    "ts-node": "10.9.2",
    "typescript": "5.7.3",
    "tslib": "1.14.1",
    "ts-loader": "9.5.2",
    "webpack-dev-server": "5.2.0",
    "webpack": "5.97.1",
    "yarn": "1.22.22",
    "chai": "4.1.2",
    "@storybook/react": "8.5.0",
    "@storybook/addon-actions": "8.5.0",
    "@storybook/addon-links": "8.5.0",
    "mol-conventional-changelog": "2.0.0",
    "semantic-release": "24.2.1",
    "gitbook-cli": "2.3.2",
    "libreact": "2.13.3",
    "mocha": "11.0.1",
    "chai": "5.1.2"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/mol-conventional-changelog"
    }
  },
  "jest": {
    "transform": {
      "^.+\\.tsx?$": "<rootDir>/node_modules/ts-jest/preprocessor.js"
    },
    "transformIgnorePatterns": [],
    "testRegex": ".*/__tests__/.*\\.(test|spec)\\.(jsx?|tsx?)$",
    "setupFiles": [
      "./src/__tests__/setup.js"
    ],
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json"
    ],
    "reporters": [
      "jest-tap-reporter"
    ]
  },
  "prettier": {
    "printWidth": 120,
    "tabWidth": 4,
    "useTabs": false,
    "semi": true,
    "singleQuote": true,
    "trailingComma": "es5",
    "bracketSpacing": false,
    "jsxBracketSameLine": false
  },
  "keywords": [
    "freestyler",
    "css",
    "style",
    "styles",
    "react",
    "js",
    "in-js",
    "css-in-js",
    "styled",
    "decorator",
    "component",
    "styled-components",
    "jsxstyle",
    "jsx",
    "hoc",
    "rule",
    "stylesheet"
  ]
}
